<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd	
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- 开启aop，对类代理 shiro注解也需要此配置 -->
    <!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->  
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- <mvc:view-controller path="/Manage/Unauth/unauth.do" view-name="manage/unauth/index"/> -->
	
	<!-- 注解驱动，可以自定义转换器或者解析器 -->
	<mvc:annotation-driven>
		<!-- 自定义类型转换器，解决print json数据乱码 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg index="0" value="UTF-8"></constructor-arg>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 静态数据 -->
	<mvc:default-servlet-handler/>
	
	<!-- 扫描 -->
	<context:component-scan base-package="com.ljy.manage.controller,com.ljy.weixin.controller" />	

	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 自定义异常处理-->
	<bean id="exceptionResolver" class="com.ljy.manage.resolver.MyExceptionResolver"></bean> 

	<!-- 上传拦截，如最大上传值及最小上传值
	  <bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >   
		  <property name="maxUploadSize">    
	          <value>104857600</value>    
	      </property>   
	      <property name="maxInMemorySize">    
	          <value>4096</value>    
	      </property>   
	      <property name="defaultEncoding">    
	          <value>utf-8</value>    
	      </property> 
    </bean>  
     -->
	
</beans>
