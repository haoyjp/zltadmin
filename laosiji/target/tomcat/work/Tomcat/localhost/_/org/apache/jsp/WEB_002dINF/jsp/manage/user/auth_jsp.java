/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-10-18 06:16:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.manage.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class auth_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("   <!-- 模态框（Modal）授权 -->\r\n");
      out.write("\t\t<div class=\"modal fade\" id=\"myModalRoleTree\" tabindex=\"-1\" role=\"dialog\" \r\n");
      out.write("\t\t   aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t   <div class=\"modal-dialog modal-sm\">\r\n");
      out.write("\t\t      <div class=\"modal-content\">\r\n");
      out.write("\t\t         <div class=\"modal-header\">\r\n");
      out.write("\t\t            <button type=\"button\" class=\"close\" \r\n");
      out.write("\t\t               data-dismiss=\"modal\" aria-hidden=\"true\">\r\n");
      out.write("\t\t                  &times;\r\n");
      out.write("\t\t            </button>\r\n");
      out.write("\t\t            <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n");
      out.write("\t\t               \t用户授权\r\n");
      out.write("\t\t            </h4>\r\n");
      out.write("\t\t         </div>\r\n");
      out.write("\t\t         \t<div class=\"panel-body\" style=\"heigth:100%;\">\r\n");
      out.write("\t\t\t\t\t\t<ul id=\"treeRole\" class=\"ztree\" style=\"width:700px;heigth:100%;\"></ul>\r\n");
      out.write("\t\t\t\t\t\t<span id=\"userId\" style=\"display: none\"></span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t         <div class=\"modal-footer\">\r\n");
      out.write("\t\t            <button type=\"button\" id=\"addButton\" class=\"btn btn-primary\" onclick=\"authenrization()\">\r\n");
      out.write("\t\t               \t确认\r\n");
      out.write("\t\t            </button>\r\n");
      out.write("\t\t         </div>\r\n");
      out.write("\t\t      </div><!-- /.modal-content -->\r\n");
      out.write("\t\t\t</div><!-- /.modal -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//授权\r\n");
      out.write("\t\tfunction authenrization(){\r\n");
      out.write("\t\t\tvar userId = $(\"#userId\").val();\r\n");
      out.write("\t\t\tvar treeObj=$.fn.zTree.getZTreeObj(\"treeRole\");\r\n");
      out.write("\t        var nodeSelect=treeObj.getCheckedNodes(true);\r\n");
      out.write("\t        var arr = [];\r\n");
      out.write("\t        for(var i = 0;i<nodeSelect.length;i++){\r\n");
      out.write("\t        \tif(nodeSelect[i].pId != 0){\r\n");
      out.write("\t\t        \tif(nodeSelect[i].roleId!=null && nodeSelect[i].roleId != \"\" && typeof(nodeSelect[i].roleId) != 'undefinde'){\r\n");
      out.write("\t\t\t        \tarr.push(nodeSelect[i].roleId);\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        }\r\n");
      out.write("\t        var params = arr.join(\",\");\r\n");
      out.write("\t        $.ajax({\r\n");
      out.write("\t        \turl:'");
      out.print(basePath);
      out.write("Manage/User/authenrization.do',\r\n");
      out.write("\t        \ttype:'POST',\r\n");
      out.write("\t        \tdata:eval('[{\\\"userId\\\":\\\"'+userId+'\\\",\\\"roleId\\\":\\\"'+params+'\\\"}]')[0],\r\n");
      out.write("\t        \tdataType:'text',\r\n");
      out.write("\t        \tsuccess:function(result){\r\n");
      out.write("\t        \t\tvar t = eval('('+result+')');\r\n");
      out.write("\t        \t\tif(t.status == -2){\r\n");
      out.write("\t        \t\t\t$('#myModalRoleTree').modal('hide');\r\n");
      out.write("\t        \t\t\tlayer.msg(t.msg,{type:6,icon:2});\r\n");
      out.write("\t        \t\t}\r\n");
      out.write("\t        \t\tif(t.status == -1){\r\n");
      out.write("\t        \t\t\t$('#myModalRoleTree').modal('hide');\r\n");
      out.write("\t        \t\t\tlayer.msg(t.msg,{type:6,icon:2});\r\n");
      out.write("\t        \t\t}\r\n");
      out.write("\t        \t\tif(t.status == 99){\r\n");
      out.write("\t        \t\t\t$('#myModalRoleTree').modal('hide');\r\n");
      out.write("\t        \t\t\tlayer.alert('授权成功',{icon:1});\r\n");
      out.write("\t        \t\t}\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        });\r\n");
      out.write("\t        \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t var settingTree = {\r\n");
      out.write("\t\t\t        check: {\r\n");
      out.write("\t\t\t            enable: true\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        view: {\r\n");
      out.write("\t\t\t        \tshowLine: false\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        data: {\r\n");
      out.write("\t\t\t            simpleData: {\r\n");
      out.write("\t\t\t                enable:true,\r\n");
      out.write("\t\t\t                idKey: \"id\",\r\n");
      out.write("\t\t\t                pIdKey: \"pId\",\r\n");
      out.write("\t\t\t                rootPId: \"\"\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    };\r\n");
      out.write("\t\t\t    var nodesRole;\r\n");
      out.write("\t\t\t    function initTreeNodeRole(){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl:'");
      out.print(basePath);
      out.write("Manage/Role/tree.do?userId='+$(\"#userId\").val(),\r\n");
      out.write("\t\t\t\t\t\ttype:'GET',\r\n");
      out.write("\t\t\t\t\t\tdataType:'text',\r\n");
      out.write("\t\t\t\t\t\tasync:false,\r\n");
      out.write("\t\t\t\t\t\tsuccess:function(result){\r\n");
      out.write("\t\t\t\t\t\t\tnodesRole = eval('('+result+')');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t var t2 = $(\"#treeRole\");\r\n");
      out.write("\t\t\t\t     t2 = $.fn.zTree.init(t2, settingTree, nodesRole);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//授权modalandtree\r\n");
      out.write("\t\t\t\tfunction showRoleTree(userId){\r\n");
      out.write("\t\t\t\t\t$('#myModalRoleTree').modal('show');\r\n");
      out.write("\t\t\t\t\t$(\"#userId\").val(userId);\r\n");
      out.write("\t\t\t\t\tinitTreeNodeRole();\r\n");
      out.write("\t\t\t\t\t//授权回显\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\turl:'");
      out.print(basePath);
      out.write("Manage/User/anthReturnView.do?userId='+userId,\r\n");
      out.write("\t\t\t\t\t\ttype:'GET',\r\n");
      out.write("\t\t\t\t\t\tsuccess:function(result){\r\n");
      out.write("\t\t\t\t\t\t\tfor(var i in result){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar treeObj = $.fn.zTree.getZTreeObj(\"treeRole\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar node = treeObj.getNodeByParam(\"roleId\",result[i].roleId);\r\n");
      out.write("\t\t\t\t\t\t\t\t//treeObj.selectNode(node);\r\n");
      out.write("\t\t\t\t\t\t\t\ttreeObj.checkNode(node, true, true);//复选框被选中\r\n");
      out.write("\t\t\t\t\t\t\t\ttreeObj.updateNode(node);  // 注：设置checked属性之后，一定要更新该节点，否则会出现只有鼠标滑过的时候节点才被选中的情况\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
